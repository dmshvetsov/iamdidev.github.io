{"data":{"markdownRemark":{"html":"<ol>\n<li>Don't try to impress. Be humble, learn, show respect, ask questions and willing to get better;</li>\n<li>If you editing a code for an existed project writed by other developers follow the style that the code is write. Your brother by codebase will apreciate that. Do not write fancy style because you wish to have your own especial way to write code. If a codebase have no consistent code style rise the issue. Linters and other tools for the rescue;</li>\n<li>Don't be hackers when you writing code. Hackers brakes things. Literaly. I am sure your least goal is to write broken code. If you сode doesn't work and you trying to pick a solution by changing arguments from, moving code around, copy and pasting solutions from googled blog post and stackoverflow answers without understanding how it works and why it is made this way you making a hacker act. Don't do it. But sometimes it is good to hack a program. It is good way to learn thing by breaking it, looking inside trying move it parts. Be hackers when you learn an don't when you write code;</li>\n<li>Newer-ever do more that one thing at a time. If you implementing new feature, implement it do not fix code style. You are in a process of fixing code style then do not refactor. You start a refactoring do not fix code style along the way. This will lead to clear thoughts, better results, and concise git commits.</li>\n</ol>","frontmatter":{"title":null,"description":null,"related":null}}},"pageContext":{"slug":"/blog/tech/0000-00-00-advices-for-junior-developers/","previous":{"fields":{"slug":"/blog/tech/2019-03-11-99-bottles-of-oop/"},"frontmatter":{"title":"99 Bottles of Object Oriented Programming","description":"Book review of “99 Bottle of OOP” by Sandi Metz and Katrina Owen","date":"2019-03-11T00:00:00.000Z"}},"next":{"fields":{"slug":"/blog/tech/0000-00-00-look-at-softwate-team-through-football/"},"frontmatter":{"title":"A look at a software development team through football","description":null,"date":null}}}}