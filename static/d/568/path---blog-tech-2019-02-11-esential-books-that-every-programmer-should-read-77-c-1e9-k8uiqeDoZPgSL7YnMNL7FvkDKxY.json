{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Never ask advice of someone with whom you wouldn’t want to trade places — Darren Hardy</p>\n</blockquote>\n<p>The idea to collect a list of books that knowledgeable, experienced and well-known programmers recommends to read comes to me from <a href=\"https://www.youtube.com/watch?v=zqq6_zu8x6o&#x26;feature=youtu.be\">The long Journey to Ruby Mastery</a> conference talk by Bozhidar Batsov.</p>\n<p>Here I share what I have found so far: the books recommendations from the Bozhidar talk, lists by Uncle Bob, and Kent Beck, books from blog posts by Jeff Atwood and DHH.</p>\n<hr>\n<p><strong>Bozhidar Batsov</strong> VP Engineering at Toptal and open-source hacker in his talk named 15 books to reach mastery as a programmer independently of programming language:</p>\n<ul>\n<li><a href=\"https://amzn.to/2IJKswJ\">Inside the Machine</a> how computers work</li>\n<li><a href=\"https://amzn.to/2KjIKp1\">CODE</a> processors and stuff</li>\n<li><a href=\"https://amzn.to/2IOSep2\">Concrete Mathematics: A Foundation for Computer Science</a></li>\n<li><a href=\"https://amzn.to/2MPVNRm\">Structure and Interpretation of Computer Programs</a> proper introduction into programming</li>\n<li><a href=\"https://amzn.to/31AShNR\">How to Design Programs: An Introduction to Programming and Computing</a></li>\n</ul>\n<p>Even if you have 20 years of experience in programming you can learn a lot from the books above thinks Bozhidar.</p>\n<ul>\n<li><a href=\"https://amzn.to/31A9tTH\">The Algorithm Design Manual</a> and <a href=\"https://amzn.to/2ILXE4k\">Introduction to Algorithms</a> for a good understanding of algorithms</li>\n<li>good programmers should understand how compilers works <a href=\"https://amzn.to/2Rmt8BN\">Compilers: Principles, Techniques, and Tools</a></li>\n<li>every programmer should know <a href=\"https://amzn.to/2MQddgq\">C Programming Language</a></li>\n<li><a href=\"https://amzn.to/2KPZBPE\">Advanced Programming in the UNIX Environment</a></li>\n<li>Unix Network Programming <a href=\"https://amzn.to/2WLiWUC\">volume 1</a> and <a href=\"https://amzn.to/2Rjs69V\">volume 2</a></li>\n</ul>\n<blockquote>\n<p>This a essential minimum for a good developer.</p>\n<p>– Bozhidar</p>\n</blockquote>\n<p>For programmers working with object-oriented languages Bozhidar recommends:</p>\n<ul>\n<li><a href=\"https://amzn.to/2IJAkE7\">Growing Object-Oriented Software, Guided by Tests</a></li>\n<li><a href=\"https://amzn.to/2RigUKn\">Domain-Driven Design</a></li>\n</ul>\n<p>The last book in Bozhidar's list is The Elements of Programming Style.</p>\n<hr>\n<p>I asked Robert C. Martin, aka <strong>Uncle Bob Martin</strong>, software engineer, <a href=\"https://www.amazon.com/Robert-C.-Martin/e/B000APG87E/ref=as_li_ss_tl?qid=1549506215&#x26;sr=1-2-ent&#x26;linkCode=sl2&#x26;tag=sdm05-20&#x26;linkId=717262290b5f8817e7c157f421fdc1a5\">author</a>, <a href=\"https://sites.google.com/site/unclebobconsultingllc/home/training\">instructor</a>, co-author of Agile Manifesto, for books recommendations. Here is his list:</p>\n<ul>\n<li><a href=\"https://amzn.to/2MRhW1F\">Design Patterns</a></li>\n<li><a href=\"https://amzn.to/2KQ64KF\">Structure and Interpretation of Computer Programs</a> (recommended for the second time)</li>\n<li><a href=\"https://amzn.to/2KQ0mbs\">Fundamental Algorithms Vol.1 of The Art of Computer Programming series</a></li>\n<li><a href=\"https://amzn.to/2RmtKaz\">The Annotated Turing</a></li>\n<li><a href=\"https://amzn.to/2IJNrW8\">Refactoring</a></li>\n<li><a href=\"https://amzn.to/2RkQuYD\">Extreme Programming Explained</a></li>\n<li><a href=\"https://amzn.to/2MSfUyh\">Redshirts</a></li>\n<li>The “Bobiverse” trilogy, <a href=\"https://amzn.to/2RgqeP8\">volume 1</a>, <a href=\"https://amzn.to/2KTLOHU\">volume 2</a>, and <a href=\"https://amzn.to/2XeoJq5\">volume 3</a></li>\n</ul>\n<hr>\n<p>I asked speaker and author of the <a href=\"https://amzn.to/2FcAkf9\">Extreme Programming book series</a> <strong>Kent Beck</strong>, for books recommendations:</p>\n<ul>\n<li><a href=\"https://amzn.to/31Lsm6m\">On Growth and Form</a></li>\n<li><a href=\"https://amzn.to/2IJwxqx\">The Timeless Way of Building</a></li>\n<li>Nature’s Patterns series: <a href=\"https://amzn.to/31DP8Nd\">Shapes</a>, <a href=\"https://amzn.to/2IlSH3b\">Flow</a>, and <a href=\"https://amzn.to/31AZzkP\">Branches</a></li>\n</ul>\n<hr>\n<p><strong>Jeff Atwood</strong> author of <a href=\"https://blog.codinghorror.com/\">Coding Horror</a> blog and co-founder of Stack Overflow and Discourse, share his list of Recommended Reading for Developers:</p>\n<ul>\n<li><a href=\"https://amzn.to/2RfxN8w\">Code complete 2</a></li>\n<li><a href=\"https://amzn.to/2Xglpe8\">The Mythical Man-Month</a></li>\n<li><a href=\"https://amzn.to/2RhNYm1\">Don’t Make Me Think, Revisited: A Common Sense Approach to Web Usability</a></li>\n<li><a href=\"https://amzn.to/2IJNqBn\">Rapid Development</a></li>\n<li><a href=\"https://amzn.to/2FcSqxv\">Peopleware</a></li>\n<li><a href=\"https://amzn.to/2MNR821\">The Design of Everyday Things</a></li>\n<li><a href=\"https://amzn.to/2IF86dC\">About Face: The Essentials of Interaction Design</a></li>\n<li><a href=\"https://amzn.to/2RjtysT\">The Inmates Are Running the Asylum</a></li>\n<li><a href=\"https://amzn.to/2KQ88SM\">Programming Pearls</a></li>\n<li><a href=\"https://amzn.to/2IJNvoF\">The Pragmatic Programmer: From Journeyman to Master</a></li>\n<li><a href=\"https://amzn.to/2RiZXzq\">Designing Web Usability</a></li>\n<li><a href=\"https://amzn.to/2IJP6uQ\">Regular Expressions Cookbook</a></li>\n<li><a href=\"https://amzn.to/2IJNDo9\">The Visual Display of Quantitative Information</a></li>\n<li><a href=\"https://amzn.to/2KSoNFq\">Visual Explanations: Images and Quantities, Evidence and Narrative</a></li>\n<li><a href=\"https://amzn.to/2RiGK12\">Envisioning Information</a></li>\n<li><a href=\"https://amzn.to/2IKMGvL\">Beautiful Evidence</a></li>\n</ul>\n<p>Some of them Jeff mentioned in the comments on the page:</p>\n<ul>\n<li><a href=\"https://amzn.to/2RiH3sI\">Waltzing With Bears: Managing Risk on Software Projects</a></li>\n<li><a href=\"https://amzn.to/2MOQD85\">Dynamics of Software Development</a></li>\n</ul>\n<p>Jeff added links to Amazon as well and put his opinion under every book in <a href=\"https://blog.codinghorror.com/recommended-reading-for-developers/\">his list</a>.</p>\n<hr>\n<p>David Heinemeier Hansson, aka <strong>DHH</strong>, creator of Ruby on Rails, founder and CTO at Basecamp, <a href=\"https://www.amazon.com/David-Heinemeier-Hansson/e/B001JS19Y8/ref=as_li_ss_tl?qid=1549503703&#x26;sr=1-2-ent&#x26;linkCode=sl2&#x26;tag=sdm05-20&#x26;linkId=baa49776df556d6e2497fb37e04685e6\">author</a>, and public speaker share the 5 books that meant most for him:</p>\n<ul>\n<li><a href=\"https://amzn.to/2RkRGv5\">Smalltalk Best Practice Patterns</a></li>\n<li><a href=\"https://amzn.to/2Ri7QoU\">Refactoring: Improving the Design of Existing Code</a> (recommended for the second time)</li>\n<li><a href=\"https://amzn.to/2RoFCck\">Patterns of Enterprise Application Architecture</a></li>\n<li><a href=\"https://amzn.to/31AIlnE\">Domain-Driven Design: Tackling Complexity in the Heart of Software</a> (recommended for the second time)</li>\n<li><a href=\"https://amzn.to/2RrO3Ul\">Are Your Lights On?: How to Figure Out What the Problem Really Is</a></li>\n<li><a href=\"https://amzn.to/2IF8qsQ\">The Elements of Style, Fourth Edition</a></li>\n<li><a href=\"https://amzn.to/2KjKjmT\">On Writing Well: The Classic Guide to Writing Nonfiction</a></li>\n</ul>\n<p>David comments on each book in <a href=\"https://signalvnoise.com/posts/3375-the-five-programming-books-that-meant-most-to-me\">his post</a>, and I recommend reading it.</p>\n<h2>Call to action</h2>\n<p>What your list of “Essential Books That Every Programmer Should Read”? <a href=\"https://twitter.com/iamdidev/status/1094709906593206273?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1094709906593206273&#x26;ref_url=https%3A%2F%2Fmedium.com%2Fmedia%2F0a7f3503640e215db2e1590328021324%3FpostId%3Da61565095781\">Respond with tweet</a></p>\n<p>Which programmer would you like to ask for advice about which book to read next? <a href=\"https://twitter.com/iamdidev/status/1094709980740108288?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1094709980740108288&#x26;ref_url=https%3A%2F%2Fmedium.com%2Fmedia%2F28cb4642ca4f395d83205ed89be1d657%3FpostId%3Da61565095781\">Respond with tweet</a></p>\n<p><a href=\"https://twitter.com/iamdidev/status/1094916278379339777?ref_src=twsrc%5Etfw%7Ctwcamp%5Etweetembed%7Ctwterm%5E1094916278379339777&#x26;ref_url=https%3A%2F%2Fmedium.com%2Fmedia%2F55a38d10b24383bc3e0ff7b759d1a43d%3FpostId%3Da61565095781\">Share the article on twitter</a> so that everyone else also knows about it.</p>","frontmatter":{"title":"Essential Books That Every Programmer Should Read","description":"The books recommendations from the Bozhidar talk, lists by Uncle Bob, and Kent Beck, books from blog posts by Jeff Atwood and DHH.","related":null}}},"pageContext":{"slug":"/blog/tech/2019-02-11-esential-books-that-every-programmer-should-read/","previous":{"fields":{"slug":"/blog/tech/2019-02-05-playing-with-ruby-threads-and-queues/"},"frontmatter":{"title":"Playing with Ruby Threads and Queues","description":"Example of how to use queues to simplify multithereaded code in Ruby","date":"2019-02-05T00:00:00.000Z"}},"next":null}}