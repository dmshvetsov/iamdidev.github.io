{"data":{"markdownRemark":{"html":"<h2>Modulus</h2>\n<p>Found a number of thousands, hundreds, tens and ones</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">int number = 1234;\nint thousands = number / 1000;\nNSLog (&quot;@The thousands place of %d is %d.&quot;, number, thousands);\nint hundreds = (number % 1000) / 100;\nNSLog (&quot;@The hundreds place of %d is %d.&quot;, number, hundreds);\nint tens = ((number % 1000) % 100) / 10;\nNSLog (@&quot;The tens place of %d is %d.&quot;, number, tens);\nint ones = (((number % 1000) % 100) % 10);\nNSLog (@&quot;The ones place of %d is %d.&quot;, number, ones);</code></pre></div>\n<p>This is another practical use of the modulus operator - to limit the range of a result to a specific set of numbers.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">((&#39;H&#39; * 2) % 127), ((&#39;e&#39; * 2) % 127), ((&#39;l&#39; * 2) % 127), ((&#39;l&#39; * 2) % 127), ((&#39;o&#39; * 2) % 127));</code></pre></div>\n<h2>Bytewise shift operation</h2>\n<p>Make string uppercase</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token string\">\"fifa\"</span><span class=\"token punctuation\">.</span>bytes<span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>n<span class=\"token operator\">|</span> n <span class=\"token operator\">-</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:chr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>join</code></pre></div>\n<p>or downcase</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token string\">\"DOWN\"</span><span class=\"token punctuation\">.</span>bytes<span class=\"token punctuation\">.</span>map <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>n<span class=\"token operator\">|</span> n <span class=\"token operator\">+</span> <span class=\"token number\">32</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span>map<span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token symbol\">:chr</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>join</code></pre></div>","frontmatter":{"title":"Math tricks for developers (consider more marketish title)","description":null,"related":null}}},"pageContext":{"slug":"/blog/tech/0000-00-00-math-tricks-for-developers/","previous":{"fields":{"slug":"/blog/tech/2019-02-11-essential-books-that-every-programmer-should-read/"},"frontmatter":{"title":"Essential Books That Every Programmer Should Read","description":"The books recommendations from the Bozhidar's talk, lists by Uncle Bob, and Kent Beck, books from blog posts by Jeff Atwood and DHH.","date":"2019-02-11T00:00:00.000Z"}},"next":{"fields":{"slug":"/blog/tech/0000-00-00-programming-techniques/"},"frontmatter":{"title":"Programming techniques (and patterns?)","description":"Explore varying programming techniques and enrich your set of tools","date":null}}}}