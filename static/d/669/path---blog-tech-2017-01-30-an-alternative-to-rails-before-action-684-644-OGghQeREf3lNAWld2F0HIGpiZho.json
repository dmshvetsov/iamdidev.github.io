{"data":{"markdownRemark":{"html":"<p>Let's assume that we have a task.</p>\n<p>There is a Ruby on Rails project. The task is to determine whether a page visitor has access to a controller method before the method execution. The ideal task for a controller filter, now called <code class=\"language-text\">before_action</code> in Rails. But I need the data from the filter in the controller method itself. I do not want to make a second request for the same data again. I do not want to clutter up the session and do not want to assign an instance variable in the controller filter.</p>\n<p>With the constraint above I produced the solution below:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Models: User, CustomerSpecialOffer, SpecialOffer</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># User has_many CustomerSpecialOffer as customer</span>\n<span class=\"token comment\"># CustomerSpecialOffer belongs_to customer</span>\n<span class=\"token comment\"># CustomerSpecialOffer belongs_to SpecialOffer</span>\n<span class=\"token comment\"># SpecialOffer has_many CustomerSpecialOffer</span>\n<span class=\"token comment\">#</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpecialOfferController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">show</span></span>\n    customer_special_offer_code <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>offer_code<span class=\"token operator\">|</span>\n      special_offer <span class=\"token operator\">=</span> <span class=\"token constant\">SpecialOffer</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      render <span class=\"token string\">'show'</span><span class=\"token punctuation\">,</span> locals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> special_offer<span class=\"token punctuation\">:</span> special_offer<span class=\"token punctuation\">,</span> offer_code<span class=\"token punctuation\">:</span> offer_code <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">no_offers</span></span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">private</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">customer_special_offer_code</span></span>\n    offer_code <span class=\"token operator\">=</span> <span class=\"token constant\">CustomerSpecialOffer</span>\n      <span class=\"token punctuation\">.</span>where<span class=\"token punctuation\">(</span>special_offer_id<span class=\"token punctuation\">:</span> params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> customer<span class=\"token punctuation\">:</span> current_user<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>select<span class=\"token punctuation\">(</span><span class=\"token symbol\">:offer_code</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span>first\n\n    <span class=\"token keyword\">if</span> offer_code\n      <span class=\"token keyword\">yield</span><span class=\"token punctuation\">(</span>offer_code<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span>\n      redirect_to <span class=\"token string\">'no_offers'</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>The <code class=\"language-text\">#customer_special_offer_code</code> block acts as a filter and at the same time as a source of the required data <code class=\"language-text\">offer_code</code>.</p>\n<p>I did a check, acquire the data, set no instance variables in the controller scope and have no extra database queries. Job done!</p>\n<hr>\n<p>Very often the <code class=\"language-text\">before_action</code> method is used so that it only harms the code. For example, <a href=\"https://rails-bestpractices.com/posts/2010/07/24/use-before_filter/\">this “Best practice”</a> is wrong in my opinion in two reasons:</p>\n<ul>\n<li>the code has become harder to understand, you should look for more than one place to understand what’s going on</li>\n<li>controller inheritance is no longer an option, together with inherited methods, you will get all filters; although I do not recommend to consider inheritance with any resource controllers, ApplicationController, AdminController, and similar controllers are the exception.</li>\n</ul>\n<p>Following the statements above, I do not recommend to do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UsersController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  before_action <span class=\"token symbol\">:set_user</span><span class=\"token punctuation\">,</span> only<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token symbol\">:show</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:edit</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:update</span><span class=\"token punctuation\">]</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">show</span></span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">edit</span></span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">update</span></span>\n    <span class=\"token keyword\">if</span> <span class=\"token variable\">@user</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>user_params<span class=\"token punctuation\">)</span>\n      redirect_to <span class=\"token variable\">@user</span><span class=\"token punctuation\">,</span> notice<span class=\"token punctuation\">:</span> <span class=\"token string\">'User was successfully updated.'</span>\n    <span class=\"token keyword\">else</span>\n      render <span class=\"token symbol\">:edit</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">private</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">set_user</span></span>\n    <span class=\"token variable\">@user</span> <span class=\"token operator\">=</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">user_params</span></span>\n    params<span class=\"token punctuation\">.</span><span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token symbol\">:user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>permit<span class=\"token punctuation\">(</span><span class=\"token symbol\">:name</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:email</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:password</span><span class=\"token punctuation\">,</span>\n                                 <span class=\"token symbol\">:password_confirmation</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>As an alternative, I suggest using a block with an explicit returned value. Here is what I mean:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UsersController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">show</span></span>\n    find_user <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>user<span class=\"token operator\">|</span>\n      render <span class=\"token symbol\">:show</span><span class=\"token punctuation\">,</span> locals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">:</span> user <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">edit</span></span>\n    find_user <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>user<span class=\"token operator\">|</span>\n      render <span class=\"token symbol\">:edit</span><span class=\"token punctuation\">,</span> locals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">:</span> user <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">end</span>\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">update</span></span>\n    find_user <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>user<span class=\"token operator\">|</span>\n      <span class=\"token keyword\">if</span> user<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span>user_params<span class=\"token punctuation\">)</span>\n        redirect_to user<span class=\"token punctuation\">,</span> notice<span class=\"token punctuation\">:</span> <span class=\"token string\">'User was successfully updated.'</span>\n      <span class=\"token keyword\">else</span>\n        render <span class=\"token symbol\">:edit</span><span class=\"token punctuation\">,</span> locals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">:</span> user <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">end</span>\n    emd\n  <span class=\"token keyword\">end</span>\n  \n  <span class=\"token keyword\">private</span>\n  \n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">find_user</span></span>\n    user <span class=\"token operator\">=</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>find<span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">yield</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">user_params</span></span>\n    params<span class=\"token punctuation\">.</span><span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token symbol\">:user</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>permit<span class=\"token punctuation\">(</span><span class=\"token symbol\">:name</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:email</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:password</span><span class=\"token punctuation\">,</span>\n                                 <span class=\"token symbol\">:password_confirmation</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>In my opinion, the block method is more clean and simple solution for the data instantiation problem rather than the <code class=\"language-text\">before_action</code> approach.</p>\n<hr>\n<p>If you have opinion, suggestions, feedback on this topic please drop a comment. I will be happy to have a talk about it.</p>\n<p>If you liked what you read please clap or share the article.</p>","frontmatter":{"title":"An alternative to Rails `before_action`","description":"Rails `before_action` is a good tool but often used incorrectly. In this article, I will show what is wrong and my remedy for `before_action` abuse.","related":[{"title":"Article: Don't use before action to load data","url":"http://craftingruby.com/posts/2015/05/31/dont-use-before-action-to-load-data.html"},{"title":"Video: Encapsulation and Global State in Rails","url":"https://thoughtbot.com/upcase/videos/encapsulation-and-global-state-in-rails"}]}}},"pageContext":{"slug":"/blog/tech/2017-01-30-an-alternative-to-rails-before-action/","previous":null,"next":{"fields":{"slug":"/blog/tech/2018-03-27-how-to-use-webpacker-with-npm-instead-of-yarn-rails-guide/"},"frontmatter":{"title":"How to use Webpacker with npm instead of Yarn, Rails guide","description":"This article will guide you how to replace Yarn with npm for Webpacker gem.","date":"2018-03-27T00:00:00.000Z"}}}}