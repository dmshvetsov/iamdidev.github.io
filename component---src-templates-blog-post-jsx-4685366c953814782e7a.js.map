{"version":3,"sources":["webpack:///./src/components/RelatedList.jsx","webpack:///./src/templates/blog/post.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["RelatedItem","_ref","title","url","react_default","a","createElement","href","className","RelatedList","_ref2","items","length","map","item","index","RelatedList_RelatedItem","Object","assign","key","propTypes","PropTypes","string","array","__webpack_require__","d","__webpack_exports__","pageQuery","Post","_data$markdownRemark","data","markdownRemark","_data$markdownRemark$","frontmatter","description","related","html","Layout","dangerouslySetInnerHTML","__html","components_RelatedList","object","m","module","exports","require","default","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","isRequired","func","match","route","location","RegExp","test","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_6__","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","site","siteMetadata","meta","name","content","host","gravatar","lang","_reach_router__WEBPACK_IMPORTED_MODULE_5__","pathname","to","_public_static_d_4202367756_json__WEBPACK_IMPORTED_MODULE_1__","node","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-templates-blog-post-jsx-4685366c953814782e7a.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst RelatedItem = ({ title, url }) => <li><a href={url} className=\"sdm-multiline-link\">{title}</a></li>;\n\nconst RelatedList = ({ items }) => {\n  if (!items || items.length === 0) return null;\n  return (\n    <section className=\"sdm-layout__block\">\n      <h2>Related Materials</h2>\n      <ul>\n        {items.map((item, index) => <RelatedItem key={index} {...item} />)}\n      </ul>\n    </section>\n  );\n};\n\nRelatedItem.propTypes = {\n  title: PropTypes.string,\n  url: PropTypes.string,\n};\n\nRelatedList.propTypes = {\n  items: PropTypes.array,\n};\n\nexport default RelatedList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/Layout';\nimport RelatedList from '../../components/RelatedList';\n\nimport '../../components/blog.sass';\n\nconst Post = ({ data }) => {\n  const {\n    markdownRemark: {\n      frontmatter: { title, description, related },\n      html,\n    }\n  } = data;\n\n  return (\n    <Layout>\n      <article className=\"sdm-layout__block\">\n        <h1>{title}</h1>\n        <h2 className=\"sdm-blog__description\">{description}</h2>\n        <div className=\"sdm-blog__content\" dangerouslySetInnerHTML={{ __html: html }} />\n      </article>\n      <RelatedList items={related} />\n    </Layout>\n  );\n};\n\nPost.propTypes = {\n  data: PropTypes.object,\n};\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        related {\n          title\n          url\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { Location } from '@reach/router';\nimport { Link, StaticQuery, graphql } from 'gatsby';\n\nimport './base.sass';\n\nconst QUERY = graphql`\n  query SiteTitleQuery {\n    site {\n      siteMetadata {\n        title,\n        description,\n        host,\n        gravatar\n      }\n    }\n  }\n`;\n\nconst match = (route, location) => RegExp(route).test(location);\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={QUERY}\n    render={data => (\n      <>\n        {/* Head manipulations */}\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: data.site.siteMetadata.description },\n            { name: 'author', content: 'Dmitry Shvetsov' },\n            { name: 'og:title', content: data.site.siteMetadata.title },\n            { name: 'og:url', content: data.site.siteMetadata.host },\n            { name: 'og:description', content: data.site.siteMetadata.description },\n            { name: 'og:image', content: data.site.siteMetadata.gravatar },\n          ]}\n        >\n          <html lang=\"en\" />\n        </Helmet>\n        {/* Navigation */}\n        <Location>\n          {({ location }) => {\n            if (location.pathname === '/') return null;\n            return (\n              <nav className=\"sdm-nav\">\n                {match('^\\/blog\\/?$', location.pathname) && <Link to=\"/\">Main page</Link>}\n                {match('^\\/blog\\/.+$', location.pathname) && <Link to=\"/blog\">All articles</Link>}\n              </nav>\n            );\n          }}\n        </Location>\n        <div className=\"sdm-layout\">\n          {/* Page content */}\n          {children}\n          {/* Page footer */}\n          <footer className=\"sdm-layout__block sdm-layout__block--footer\">\n            <p>© Dmitry Shvetsov, 2016-2019</p>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}